// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotiAPI.Data;

namespace SpotiAPI.Migrations
{
    [DbContext(typeof(SpotifyDBContext))]
    [Migration("20240103101330_newmi")]
    partial class newmi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Spotify_DataLayer.Models.Album", b =>
                {
                    b.Property<int>("Id_Album")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id_Artist")
                        .HasColumnType("int");

                    b.Property<string>("TitleOfAlbum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Album");

                    b.HasIndex("Id_Artist");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Artist", b =>
                {
                    b.Property<int>("Id_Artist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOfArtist")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Artist");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Director", b =>
                {
                    b.Property<int>("Id_Director")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOfDirector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Director");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Movie", b =>
                {
                    b.Property<int>("Id_Movie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id_Director")
                        .HasColumnType("int");

                    b.Property<string>("TitleOfMovie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Movie");

                    b.HasIndex("Id_Director");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Radio", b =>
                {
                    b.Property<int>("Id_Radio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleOfRadio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Radio");

                    b.ToTable("Radios");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Setting", b =>
                {
                    b.Property<int>("Id_Setting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FreePlan")
                        .HasColumnType("bit");

                    b.Property<bool>("GoldPlan")
                        .HasColumnType("bit");

                    b.Property<int?>("Id_User")
                        .HasColumnType("int");

                    b.Property<bool>("LightTheme")
                        .HasColumnType("bit");

                    b.Property<bool>("PremiumPlan")
                        .HasColumnType("bit");

                    b.Property<string>("SelectedTimeZoneId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Setting");

                    b.HasIndex("Id_User");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Song", b =>
                {
                    b.Property<int>("Id_Song")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id_Album")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Artist")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Radio")
                        .HasColumnType("int");

                    b.Property<string>("TitleOfSong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Song");

                    b.HasIndex("Id_Album");

                    b.HasIndex("Id_Artist");

                    b.HasIndex("Id_Radio");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id_Setting")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_User");

                    b.HasIndex("Id_Setting");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Album", b =>
                {
                    b.HasOne("Spotify_DataLayer.Models.Artist", "ArtistOfAlbum")
                        .WithMany("Albums")
                        .HasForeignKey("Id_Artist");

                    b.Navigation("ArtistOfAlbum");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Movie", b =>
                {
                    b.HasOne("Spotify_DataLayer.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("Id_Director");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Setting", b =>
                {
                    b.HasOne("Spotify_DataLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Id_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Song", b =>
                {
                    b.HasOne("Spotify_DataLayer.Models.Album", "AlbumOfSong")
                        .WithMany("Songs")
                        .HasForeignKey("Id_Album");

                    b.HasOne("Spotify_DataLayer.Models.Artist", "ArtistOfSong")
                        .WithMany()
                        .HasForeignKey("Id_Artist");

                    b.HasOne("Spotify_DataLayer.Models.Radio", "Radio")
                        .WithMany("Songs")
                        .HasForeignKey("Id_Radio");

                    b.Navigation("AlbumOfSong");

                    b.Navigation("ArtistOfSong");

                    b.Navigation("Radio");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.User", b =>
                {
                    b.HasOne("Spotify_DataLayer.Models.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("Id_Setting");

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Spotify_DataLayer.Models.Radio", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
